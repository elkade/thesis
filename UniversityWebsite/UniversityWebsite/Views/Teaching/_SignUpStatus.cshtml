@model UniversityWebsite.Model.SubjectListElementVm
@using UniversityWebsite.Services.Model
@{
    var resignString = @GetPhrase("resign");
}
@switch (Model.SignUpAction)
{
    case SignUpAction.Submitted:
        Html.BeginForm("ResignFromSubject", "SignUp", null, FormMethod.Post, new { @class = "sign-up-status-form" });
        var teacherDuringAcceptationString = @GetPhrase("teacherDuringAcceptation");
        <input type="submit" value="@resignString" class="button" />
        <text>@teacherDuringAcceptationString</text>
        break;
    case SignUpAction.Refused:
        var requestRejectedString = @GetPhrase("requestRejected");
        <text>@requestRejectedString</text>

        break;
    case SignUpAction.Approved:
        Html.BeginForm("ResignFromSubject", "SignUp", null, FormMethod.Post, new { @class = "sign-up-status-form" });
        <input type="submit" value="@resignString" class="button" />
        break;
    case SignUpAction.NotSubmitted:
        Html.BeginForm("SignUpForSubject", "SignUp", null, FormMethod.Post, new { @class = "sign-up-status-form" });
        var submitString = @GetPhrase("submit");
        <input type="submit" value="@submitString" class="button" />
        break;
}
@if (Model.SignUpAction != SignUpAction.Refused)
{
    @Html.Hidden("subjectId", Model.SubjectId)
    Html.EndForm();
}